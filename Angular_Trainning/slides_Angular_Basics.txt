1. what Angular is
2. Angular basics:
		+ bootstrapping
		- dependency injection
		- two way binding 
		+ templates
		+ controllers & models
		- directives & filters
		- routing 
3. Bootstrapping (advanced http://code.angularjs.org/1.2.13/docs/guide/bootstrap)
	ng-app directive
    <html ng-app>
		The ng-app attribute represents an Angular directive named ngApp (Angular uses name-with-dashes for its custom attributes and camelCase for the corresponding directives which implement them). This directive is used to flag the html element that Angular should consider to be the root element of our application. This gives application developers the freedom to tell Angular if the entire html page or only a portion of it should be treated as the Angular application.


	AngularJS script tag:
    <script src="lib/angular/angular.js">
		This code downloads the angular.js script and registers a callback that will be executed by the browser when the containing HTML page is fully downloaded. When the callback is executed, Angular looks for the ngApp directive. If Angular finds the directive, it will bootstrap the application with the root of the application DOM being the element on which the ngApp directive was defined.

	Double-curly binding with an expression:
    Nothing here {{'yet' + '!'}}
		This line demonstrates the core feature of Angular's templating capabilities – a binding, denoted by double-curlies {{ }} as well as a simple expression 'yet' + '!' used in this binding.
		The binding tells Angular that it should evaluate an expression and insert the result into the DOM in place of the binding. Rather than a one-time insert, as we'll see in the next steps, a binding will result in efficient continuous updates whenever the result of the expression evaluation changes

	There are 3 important things that happen during the app bootstrap:
	- The injector that will be used for dependency injection is created.
	- The injector will then create the root scope that will become the context for the model of our application.
	- Angular will then "compile" the DOM starting at the ngApp root element, processing any directives and bindings found along the way.
4. View and Template
	In Angular, the VIEW is a projection of the model through the HTML TEMPLATE. This means that whenever the model changes, Angular refreshes the appropriate binding points, which updates the view.
5. Filters
6. Two-way binding
	Notice that when the app is loaded in the browser, "Newest" is selected in the drop down menu. This is because we set orderProp to 'age' in the controller. So the binding works in the direction from our model to the UI. Now if you select "Alphabetically" in the drop down menu, the model will be updated as well and the phones will be reordered. That is the data-binding doing its job in the opposite direction — from the UI to the model.